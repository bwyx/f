// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt    DateTime  @default(now())
  verifiedAt   DateTime?
  email        String    @unique
  name         String
  passwordHash String
  sessions     Token[]
  devices      Device[]
}

model Device {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt      DateTime  @default(now())
  user           User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String    @db.Uuid
  vendor         String
  model          String
  type           String
  os             String
  osVersion      String
  browser        String
  browserVersion String
  lastSeenAt     DateTime?
  tokens         Token[]

  @@unique([userId, vendor, model, type, os, browser])
}

model Token {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token           String
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String    @db.Uuid
  device          Device    @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  deviceId        String    @db.Uuid
  expires         DateTime
  createdAt       DateTime  @default(now())
  revokedAt       DateTime?
  replacedBy      String?   @db.Uuid
  replacedByToken Token?    @relation("TokenToToken", fields: [replacedBy], references: [id], onDelete: Cascade)
  tokens          Token[]   @relation("TokenToToken")

  @@unique([userId, token])
}
